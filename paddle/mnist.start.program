{ // block 0
    persist trainable param word_embedding : fluid.VarType.LOD_TENSOR.shape(19000, 768).astype(VarType.FP32)
    persist trainable param pos_embedding : fluid.VarType.LOD_TENSOR.shape(2048, 768).astype(VarType.FP32)
    persist trainable param sent_embedding : fluid.VarType.LOD_TENSOR.shape(4, 768).astype(VarType.FP32)
    persist trainable param task_embedding : fluid.VarType.LOD_TENSOR.shape(3, 768).astype(VarType.FP32)
    persist trainable param pre_encoder_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param pre_encoder_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_0_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(768, 768).astype(VarType.FP32)
    persist trainable param encoder_layer_0_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_0_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(768, 768).astype(VarType.FP32)
    persist trainable param encoder_layer_0_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_0_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(768, 768).astype(VarType.FP32)
    persist trainable param encoder_layer_0_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_0_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(768, 768).astype(VarType.FP32)
    persist trainable param encoder_layer_0_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_0_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_0_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_0_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(768, 3072).astype(VarType.FP32)
    persist trainable param encoder_layer_0_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(3072,).astype(VarType.FP32)
    persist trainable param encoder_layer_0_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(3072, 768).astype(VarType.FP32)
    persist trainable param encoder_layer_0_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_0_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_0_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_1_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(768, 768).astype(VarType.FP32)
    persist trainable param encoder_layer_1_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_1_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(768, 768).astype(VarType.FP32)
    persist trainable param encoder_layer_1_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_1_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(768, 768).astype(VarType.FP32)
    persist trainable param encoder_layer_1_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_1_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(768, 768).astype(VarType.FP32)
    persist trainable param encoder_layer_1_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_1_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_1_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_1_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(768, 3072).astype(VarType.FP32)
    persist trainable param encoder_layer_1_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(3072,).astype(VarType.FP32)
    persist trainable param encoder_layer_1_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(3072, 768).astype(VarType.FP32)
    persist trainable param encoder_layer_1_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_1_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_1_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_2_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(768, 768).astype(VarType.FP32)
    persist trainable param encoder_layer_2_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_2_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(768, 768).astype(VarType.FP32)
    persist trainable param encoder_layer_2_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_2_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(768, 768).astype(VarType.FP32)
    persist trainable param encoder_layer_2_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_2_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(768, 768).astype(VarType.FP32)
    persist trainable param encoder_layer_2_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_2_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_2_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_2_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(768, 3072).astype(VarType.FP32)
    persist trainable param encoder_layer_2_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(3072,).astype(VarType.FP32)
    persist trainable param encoder_layer_2_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(3072, 768).astype(VarType.FP32)
    persist trainable param encoder_layer_2_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_2_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param encoder_layer_2_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param pooled_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(768, 768).astype(VarType.FP32)
    persist trainable param pooled_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param mask_lm_trans_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(768, 768).astype(VarType.FP32)
    persist trainable param mask_lm_trans_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param mask_lm_trans_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param mask_lm_trans_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(768,).astype(VarType.FP32)
    persist trainable param mask_lm_out_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(19000,).astype(VarType.FP32)
    persist var learning_rate_0 : fluid.VarType.LOD_TENSOR.shape(1,).astype(VarType.FP32)

    {Out=['learning_rate_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [1], str_value = , value = 9.999999747378752e-05)
    {Out=['mask_lm_out_fc.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [19000], str_value = , value = 0.0)
    {Out=['mask_lm_trans_layer_norm_bias']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 1.0)
    {Out=['mask_lm_trans_layer_norm_scale']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 1.0)
    {Out=['mask_lm_trans_fc.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['mask_lm_trans_fc.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [768, 768], std = 0.019999999552965164)
    {Out=['pooled_fc.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['pooled_fc.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [768, 768], std = 0.019999999552965164)
    {Out=['encoder_layer_2_post_ffn_layer_norm_bias']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_2_post_ffn_layer_norm_scale']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 1.0)
    {Out=['encoder_layer_2_ffn_fc_1.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_2_ffn_fc_1.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [3072, 768], std = 0.019999999552965164)
    {Out=['encoder_layer_2_ffn_fc_0.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [3072], str_value = , value = 0.0)
    {Out=['encoder_layer_2_ffn_fc_0.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [768, 3072], std = 0.019999999552965164)
    {Out=['encoder_layer_2_post_att_layer_norm_bias']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_2_post_att_layer_norm_scale']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 1.0)
    {Out=['encoder_layer_2_multi_head_att_output_fc.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_2_multi_head_att_output_fc.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [768, 768], std = 0.019999999552965164)
    {Out=['encoder_layer_2_multi_head_att_value_fc.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_2_multi_head_att_value_fc.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [768, 768], std = 0.019999999552965164)
    {Out=['encoder_layer_2_multi_head_att_key_fc.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_2_multi_head_att_key_fc.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [768, 768], std = 0.019999999552965164)
    {Out=['encoder_layer_2_multi_head_att_query_fc.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_2_multi_head_att_query_fc.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [768, 768], std = 0.019999999552965164)
    {Out=['encoder_layer_1_post_ffn_layer_norm_bias']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_1_post_ffn_layer_norm_scale']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 1.0)
    {Out=['encoder_layer_1_ffn_fc_1.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_1_ffn_fc_1.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [3072, 768], std = 0.019999999552965164)
    {Out=['encoder_layer_1_ffn_fc_0.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [3072], str_value = , value = 0.0)
    {Out=['encoder_layer_1_ffn_fc_0.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [768, 3072], std = 0.019999999552965164)
    {Out=['encoder_layer_1_post_att_layer_norm_bias']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_1_post_att_layer_norm_scale']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 1.0)
    {Out=['encoder_layer_1_multi_head_att_output_fc.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_1_multi_head_att_output_fc.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [768, 768], std = 0.019999999552965164)
    {Out=['encoder_layer_1_multi_head_att_value_fc.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_1_multi_head_att_value_fc.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [768, 768], std = 0.019999999552965164)
    {Out=['encoder_layer_1_multi_head_att_key_fc.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_1_multi_head_att_key_fc.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [768, 768], std = 0.019999999552965164)
    {Out=['encoder_layer_1_multi_head_att_query_fc.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_1_multi_head_att_query_fc.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [768, 768], std = 0.019999999552965164)
    {Out=['encoder_layer_0_post_ffn_layer_norm_bias']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_0_post_ffn_layer_norm_scale']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 1.0)
    {Out=['encoder_layer_0_ffn_fc_1.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_0_ffn_fc_1.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [3072, 768], std = 0.019999999552965164)
    {Out=['encoder_layer_0_ffn_fc_0.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [3072], str_value = , value = 0.0)
    {Out=['encoder_layer_0_ffn_fc_0.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [768, 3072], std = 0.019999999552965164)
    {Out=['encoder_layer_0_post_att_layer_norm_bias']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_0_post_att_layer_norm_scale']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 1.0)
    {Out=['encoder_layer_0_multi_head_att_output_fc.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_0_multi_head_att_output_fc.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [768, 768], std = 0.019999999552965164)
    {Out=['encoder_layer_0_multi_head_att_value_fc.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_0_multi_head_att_value_fc.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [768, 768], std = 0.019999999552965164)
    {Out=['encoder_layer_0_multi_head_att_key_fc.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_0_multi_head_att_key_fc.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [768, 768], std = 0.019999999552965164)
    {Out=['encoder_layer_0_multi_head_att_query_fc.b_0']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['encoder_layer_0_multi_head_att_query_fc.w_0']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [768, 768], std = 0.019999999552965164)
    {Out=['pre_encoder_layer_norm_bias']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 0.0)
    {Out=['pre_encoder_layer_norm_scale']} = fill_constant(inputs={}, dtype = 5, force_cpu = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [768], str_value = , value = 1.0)
    {Out=['task_embedding']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [3, 768], std = 0.019999999552965164)
    {Out=['sent_embedding']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [4, 768], std = 0.019999999552965164)
    {Out=['pos_embedding']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [2048, 768], std = 0.019999999552965164)
    {Out=['word_embedding']} = truncated_gaussian_random(inputs={}, dtype = 5, mean = 0.0, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0, shape = [19000, 768], std = 0.019999999552965164)
}

